ATK GOLETA - ANSYS MACRO WRITING BEST PRACTICE GUIDE
-BEN GUEST, bagvoo@gmail.com
-VERSION 1.1

Brackets (<>) imply needs to be filled out by author, parentheses (()) imply a
note about 

1) All Macros/Input Decks should begin with a header, for example:

   !&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
   !<Macro Name>.mac
   !<Author Name> - <Author Email>
   !DESCRIPTION: <Description of Macro Functionality>
   !PRECONDITIONS:
   !	ARG1 = <Required Macro Input> (optional if nothing is required)
   !	ARG2 = <Description of Input> 
   !		<...>
   !	Required Macros:
   !		<Macros Required to Run>.mac
   !	Required Inputs:
   !		<Other Required Files>.txt/.dat
   !	<Anything else required before run>
   !POSTCONDITIONS'S
   !	<Assigned Parameters or Files Created> = <Description of Variable> 
   !NOTES: 
   !	<Any other things the user must understand>
   !	<References>
   !&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
  
   After reading this header, the user should be able to use the macro/input file
   with out digging through the code to understand what the macro does.

1.5) Optionally end file with footer something like:

   !======THE--END========THE--END========THE--END=========
   !ITS THE END OF THE MACRO AS WE KNOW IT, AND I FEEL FINE

2) DO NOT use variable/parameter names beginning with an underscore (_) these are
   variable reserved for ansys internal macros

   DO use variable/parameter names that end with an underscore (_) for parameters 
   that you don't want to show up when show parameters is called. You still need
   to be careful with parameter names as these parameters are not local variables

3) DO NOT use branching structure to control program flow
    IE *IF,<x>,GT,<y>,:GO_HERE  
    or *GO,:HERE
   This type of programing is hard to follow and is considered bad practice
   across the software industry
   
   DO use *IF,*ELSE/*ELSEIF and *DO/*DOWHILE to control program flow
    IE  *IF,<x>,LT,<y>,THEN   
          <commands>           
        *ELSEIF,<x>,LT,<z>       (optional)
          <more commands>         (optional)
        *ELSE                    (optional)
          <even more commands>    (optional)
        *ENDIF                   
    or
        *DO,<i>,<start #>,<end #> 
          <commands>               
        *ENDDO                    

   DO indent the commands for *IF, *DO and *DOWHILE by at least a couple spaces.
   this will vastly increase the readability of your macro.
   
   DO use the /EOF file to return without exicuting the rest of the macro
     IE *IF,<x>,NE,<y>,THEN
           /EOF
        *ENDIF
   
4) DO comment the hell out of everything (obviously).

5) DO create a short but somewhat descriptive name for your macro, 
   IE  run.mac                => bad
       LTL.mac (line to line) => ok
       NPRESS.mac             => better
       getMass.mac            => best
